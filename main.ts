namespace SpriteKind {
    export const Asteroid = SpriteKind.create()
    export const badShoot = SpriteKind.create()
    export const myShoot = SpriteKind.create()
    export const Tourelle = SpriteKind.create()
    export const badShip = SpriteKind.create()
    export const Bonus = SpriteKind.create()
    export const LifeUp = SpriteKind.create()
    export const ShootQuick = SpriteKind.create()
    export const Screen = SpriteKind.create()
    export const Boss = SpriteKind.create()
    export const bulletType1 = SpriteKind.create()
}
namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile4 = img`
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
2 3 1 1 3 2 3 3 2 2 3 3 1 1 1 3 
. 2 2 3 2 2 2 2 . 2 2 2 3 3 2 2 
. . 2 2 2 . . . . . . 2 2 3 2 . 
. . . . . . . . . . . . 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile5 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 2 . . . 
. . 2 2 2 . . . . . 2 2 3 2 . . 
. 2 3 3 3 2 2 . . 2 2 3 1 3 2 . 
2 3 3 1 1 3 2 2 2 3 3 1 1 1 3 2 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile6 = img`
. . 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. 2 2 1 1 1 1 1 1 1 1 1 1 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 3 2 2 2 2 2 2 2 2 2 2 2 2 1 2 
2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 3 3 3 3 3 3 3 3 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 . . 
`
    //% blockIdentity=images._tile
    export const tile7 = img`
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
`
}
scene.onHitWall(SpriteKind.badShip, function (sprite) {
    sprite.destroy(effects.ashes, 100)
})
sprites.onOverlap(SpriteKind.badShoot, SpriteKind.Player, function (sprite, otherSprite) {
    sprite.destroy(effects.fire, 100)
    info.changeLifeBy(-1)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.ShootQuick, function (sprite, otherSprite) {
    otherSprite.destroy()
    coolDown = 0
    pause(5000)
    coolDown = 500
})
function createLevel (col: number) {
    tiles.setTileAt(tiles.getTileLocation(col, 0), myTiles.tile4)
    tiles.setTileAt(tiles.getTileLocation(col, 7), myTiles.tile5)
    if (screenCenter.x + 80 < 1020 - scene.screenWidth()) {
        if (Math.percentChance(20)) {
            tourelle = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 3 3 3 3 3 3 3 . . . . 
. . . . . 3 3 3 3 3 3 3 . . . . 
. . . . 2 2 2 2 2 2 2 2 2 . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 . . 
. . 2 2 2 1 2 2 2 2 2 1 2 2 2 . 
. . 2 2 1 1 1 2 2 2 1 1 1 2 2 . 
. . 1 1 1 1 1 1 2 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Tourelle)
            if (Math.percentChance(75)) {
                hTourelle = 116
            } else {
                tourelle.image.flipY()
                hTourelle = 3
            }
            tourelle.setPosition(col * 16 + 8, hTourelle)
        } else {
            if (Math.percentChance(20)) {
                row = Math.randomRange(1, 6)
                tiles.setTileAt(tiles.getTileLocation(col, row), myTiles.tile6)
                tiles.setWallAt(tiles.getTileLocation(col, row), true)
            }
        }
    }
}
function animateEnemies () {
    for (let value of sprites.allOfKind(SpriteKind.Tourelle)) {
        if (Math.percentChance(100)) {
            projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 5 5 5 . . . . . . . 
. . . . . 4 5 4 5 4 . . . . . . 
. . . . . . 5 5 5 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, value, 0, 0)
            projectile.setKind(SpriteKind.badShoot)
            xVel = ship.x - projectile.x
            yVel = ship.y - projectile.y
            hypotenuse = Math.sqrt(xVel * xVel + yVel * yVel)
            projectile.setVelocity(xVel * (50 / hypotenuse), yVel * (50 / hypotenuse))
        }
    }
    for (let value2 of sprites.allOfKind(SpriteKind.badShip)) {
        if (Math.percentChance(60)) {
            projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. b b b b b . . . . . . . . . . 
. b b b b b . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, value2, -200, 0)
            projectile.setKind(SpriteKind.badShoot)
        }
    }
}
function callBoss2 () {
    bossCalled = true
    screenCenter.vx = 0
    bossHeart = sprites.create(img`
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
`, SpriteKind.Boss)
    boss = sprites.create(img`
. . . . . . . . . . 6 6 6 6 6 6 6 6 6 6 6 . . . . . . . . . 
. . . . . . . . 6 6 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . . . 
. . . . . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . . 
. . . . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . 
. . . . . 6 7 5 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . 
. . . . 6 7 5 5 8 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . 
. . . . 6 7 5 8 3 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . 
. . . 6 7 7 5 3 3 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . . 6 7 7 7 5 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 . . . 
. . 6 7 7 7 7 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 6 7 6 . . . 
. . 6 6 6 6 6 6 8 8 8 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6 6 . . . 
. . . 6 6 8 8 7 8 8 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 . . . 
. . 6 7 7 8 8 7 8 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 . . . 
. . 6 6 7 8 8 7 8 8 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 . . . . 
. . . 6 7 7 8 7 7 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 . . 
. . . . 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 7 7 6 . . 
. . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 7 7 7 7 7 6 . 
. . . 6 7 7 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 6 7 7 6 
. . 6 7 7 6 6 6 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 . 6 6 6 6 
. 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 6 . . . . . 
. . . . 6 6 6 6 7 7 7 7 7 7 7 6 7 6 7 6 7 6 6 6 6 . . . . . 
. . . 6 6 6 6 7 7 7 6 6 6 6 6 6 6 6 . . 6 6 6 7 6 6 . . . . 
. . . 6 6 6 7 7 7 6 6 . . 6 6 6 6 6 . . . 6 7 6 7 6 . . . . 
. . . 6 6 6 7 7 7 6 6 . . . 6 6 7 6 . . . 6 6 7 6 6 . . . . 
. . . 6 7 7 7 7 6 6 6 6 . . 6 7 6 6 6 . . 6 7 6 7 7 6 . . . 
. . 6 6 7 7 6 6 6 6 6 6 . . 6 6 7 6 6 . . . 6 7 7 7 6 . . . 
. 6 7 7 7 7 6 6 6 6 6 6 . . 6 7 6 7 6 . . . 6 7 7 7 6 . . . 
6 7 7 7 6 6 6 6 6 6 6 7 6 . 6 6 7 6 6 . . . 6 7 7 7 7 6 . . 
7 7 7 7 6 . . 6 6 6 7 6 6 . 6 6 6 6 6 . . . . 6 7 7 7 6 . . 
6 6 6 6 6 . . . 6 7 6 7 6 . . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 6 7 6 . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . . 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . . 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . . 6 6 6 . . . 6 7 7 7 7 6 . . 
. . . . . . . . 6 7 7 7 7 6 . . 6 6 6 . . . 6 7 7 7 7 6 . . 
. . . . . . . . 6 7 7 7 7 6 . . 6 6 6 . . 6 7 7 7 7 6 . . . 
. . . . . . . 6 7 7 7 7 6 . . . 6 6 . . . 6 7 7 7 7 6 . . . 
. . . . . . 6 7 7 7 7 7 6 . . 6 6 6 . . . 6 7 7 7 6 . . . . 
. . . . . 6 7 7 7 7 6 6 . . 6 6 6 6 . . . 6 7 7 7 6 . . . . 
. . . . 6 7 7 7 7 7 6 . . . 6 6 6 6 . . 6 7 7 7 6 6 . . . . 
. . . . 6 7 7 7 7 6 6 . . 6 6 6 6 . . . 6 7 7 7 6 . . . . . 
. . . 6 7 7 7 7 6 6 . . . 6 6 6 6 . . . 6 7 7 6 . . . . . . 
. . . 6 7 7 7 7 6 . . . . 6 6 6 . . . . . 6 7 7 6 . . . . . 
. . . 6 7 7 7 6 6 . . . . 6 6 6 . . . . . 6 7 7 6 . . . . . 
. . 6 7 7 7 7 6 . . . . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . 6 7 7 7 7 6 . . . . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . 6 7 7 7 6 6 . . . . . 6 6 6 . . . . . . 6 7 7 6 . . . . 
. . 6 7 7 7 6 . . . . . . 6 6 6 . . . . . . 6 7 7 7 6 . . . 
. . 6 7 7 7 6 . . . . . . . 6 6 . . . . . . 6 7 7 7 6 . . . 
. . . 6 7 7 6 . . . . . . . 6 6 . . . . . . 6 7 7 7 6 . . . 
. . . 6 7 6 . . . . . . . . . 6 6 . . . . . 6 7 7 7 6 . . . 
. . . 6 7 6 . . . . . . . . . 6 6 6 . . . . 6 7 7 7 6 . . . 
. . . . 6 6 . . . . . . . . . . . . . . . 6 7 7 7 6 . . . . 
. . . . 6 . . . . . . . . . . . . . . . 6 7 7 7 6 . . . . . 
. . . . 6 . . . . . . . . . . . . . . . 6 6 6 6 . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, SpriteKind.Enemy)
    animation.runImageAnimation(
    boss,
    [img`
. . . . . . . . . . 6 6 6 6 6 6 6 6 6 6 6 . . . . . . . . . 
. . . . . . . . 6 6 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . . . 
. . . . . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . . 
. . . . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . 
. . . . . 6 7 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . 
. . . . 6 7 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . 
. . . . 6 7 6 6 3 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . 
. . . 6 7 7 5 3 3 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . . 6 7 7 7 5 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 . . . 
. . 6 7 7 7 7 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 6 7 6 . . . 
. . 6 6 6 6 6 6 8 8 8 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6 6 . . . 
. . . 6 6 8 8 7 8 8 7 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 . . . 
. . 6 7 7 8 8 7 8 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 . . . 
. . 6 6 7 8 8 7 7 8 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 . . . . 
. . . 6 7 7 8 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 7 6 6 . . . . . 
. . . . 6 6 7 7 7 7 7 8 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 . . . 
. . . . 6 7 7 7 7 7 7 8 7 7 7 7 7 7 7 6 7 6 7 7 7 7 6 . . . 
. . . 6 7 7 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 7 7 7 6 . . 
. . 6 7 7 6 8 6 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 6 7 7 6 . 
. 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 6 6 6 6 6 . 
. . . . 6 6 6 6 7 7 7 7 7 7 7 6 7 6 7 6 7 6 6 6 6 . . . . . 
. . . . . 6 6 7 7 7 6 6 6 6 6 6 6 6 . . 6 6 6 7 6 6 . . . . 
. . . . . . . 6 7 7 6 . . 6 6 6 6 6 . . . 6 7 6 7 6 . . . . 
. . . . . . 6 7 7 7 6 . . . 6 6 7 6 . . . 6 6 7 6 6 . . . . 
. . . . . . 6 7 7 7 6 . . . 6 7 6 6 6 . . 6 7 6 7 7 6 . . . 
. . . . . 6 6 7 7 6 6 . . . 6 6 7 6 6 . . . 6 7 7 7 6 . . . 
. . . . 6 7 7 7 7 6 6 . . . 6 7 6 7 6 . . . 6 7 7 7 6 . . . 
. . . . 6 7 7 6 6 6 6 6 . . 6 6 7 6 6 . . . 6 7 7 7 7 6 . . 
. . . 6 7 7 7 6 6 6 7 6 . . 6 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . 6 6 6 6 6 6 7 7 6 . . . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . 6 7 6 7 7 6 . . . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . 6 7 7 7 7 6 . . . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . 6 7 7 7 7 6 . . . 6 6 6 . . . . . 6 7 7 7 6 . . 
. . . . . . 6 7 7 7 7 6 . . 6 6 6 6 . . . . . 6 7 7 7 6 . . 
. . . . . . 6 7 7 7 7 6 . . 6 6 6 . . . . . 6 7 7 7 7 6 . . 
. . . . . . 6 7 7 7 7 6 . . 6 6 6 . . . . . 6 7 7 7 7 6 . . 
. . . . . . 6 7 7 7 6 . . 6 6 6 6 . . . . 6 7 7 7 7 6 . . . 
. . . . . . 6 7 7 7 6 . . 6 6 6 . . . . . 6 7 7 7 7 6 . . . 
. . . . . 6 7 7 7 7 6 . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . . . 6 7 7 7 7 6 . . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . . . 6 7 7 7 7 6 . . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . . . 6 7 7 7 7 6 . . . 6 6 6 6 . . . . 6 7 7 7 6 . . . . 
. . . 6 7 7 7 7 6 6 . . . 6 6 6 6 . . . . 6 7 7 7 6 . . . . 
. . . 6 7 7 7 7 6 . . . . . 6 6 6 6 . . . . 6 7 7 6 . . . . 
. . . 6 7 7 7 6 6 . . . . . . 6 6 6 . . . . 6 7 7 6 . . . . 
. . 6 7 7 7 7 6 . . . . . . 6 6 6 6 . . . . 6 7 7 7 6 . . . 
. . 6 7 7 7 7 6 . 6 . . . 6 6 6 6 . . . . . 6 7 7 7 6 . . . 
. . 6 7 7 7 6 6 . 6 6 6 6 6 6 6 . . . . . . . 6 7 7 6 . . . 
. . 6 7 7 7 6 . . . 6 6 6 6 6 . . . . . . . . 6 7 7 7 6 . . 
. . 6 7 7 7 6 . . . . . . . . . . . . . . . . 6 7 7 7 6 . . 
. . . 6 7 6 6 . . . . . . . . . . . . . . . . 6 7 7 7 6 . . 
. . . 6 7 6 . . . . . . . . . . . . . . . . . 6 7 7 7 6 . . 
. . . . 6 6 6 6 . . . . . . . . . . . . . . . 6 7 7 7 6 . . 
. . . . . . . . . . . . . . . . . . . . . . . . 6 7 7 7 6 . 
. . . . . . . . . . . . . . . . . . . . . . . . . 6 6 6 6 6 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . 6 6 6 6 6 6 6 6 6 6 6 . . . . . . . . . 
. . . . . . . . 6 6 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . . . 
. . . . . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . . 
. . . . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . . 
. . . . . 6 7 5 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . . 
. . . . 6 7 5 5 8 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . 
. . . . 6 7 5 8 3 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . . 
. . . 6 7 7 5 3 3 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . . 6 7 7 7 5 5 5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 . . . 
. . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 . . . 
. . 6 7 7 7 7 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 6 7 6 . . . 
. . 6 6 6 6 6 6 8 8 8 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6 6 . . . 
. . . 6 6 8 8 7 8 8 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 . . . 
. . 6 7 7 8 8 7 8 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 . . . 
. . 6 6 7 7 8 7 8 8 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 . . . . 
. . . 6 7 7 7 7 7 8 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 . . 
. . . . 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 7 7 6 . . 
. . . . 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 7 6 7 7 7 7 7 7 6 . 
. . . 6 7 7 7 6 7 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 6 7 7 6 
. . 6 7 7 6 6 6 7 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 . 6 6 6 6 
. 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 6 7 6 7 6 6 6 6 6 . . . . . 
. . . . 6 6 6 6 7 7 7 7 7 7 7 6 7 6 7 6 7 6 6 6 6 . . . . . 
. . . 6 6 6 6 7 7 7 6 6 6 6 6 6 6 6 . . 6 6 6 7 6 6 . . . . 
. . . 6 6 6 7 7 7 6 6 . . 6 6 6 6 6 . . . 6 7 6 7 6 . . . . 
. . . 6 6 6 7 7 7 6 6 . . . 6 6 7 6 . . . 6 6 7 6 6 . . . . 
. . . 6 7 7 7 7 6 6 6 6 . . 6 7 6 6 6 . . 6 7 6 7 7 6 . . . 
. . 6 6 7 7 6 6 6 6 6 6 . . 6 6 7 6 6 . . . 6 7 7 7 6 . . . 
. 6 7 7 7 7 6 6 6 6 6 6 . . 6 7 6 7 6 . . . 6 7 7 7 6 . . . 
6 7 7 7 6 6 6 6 6 6 6 7 6 . 6 6 7 6 6 . . . 6 7 7 7 7 6 . . 
7 7 7 7 6 . . 6 6 6 7 6 6 . 6 6 6 6 6 . . . . 6 7 7 7 6 . . 
6 6 6 6 6 . . . 6 7 6 7 6 . . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 6 7 6 . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . 6 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . . 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . . 6 6 6 . . . . 6 7 7 7 6 . . 
. . . . . . . . . 6 7 7 7 6 . . 6 6 6 . . . 6 7 7 7 7 6 . . 
. . . . . . . . 6 7 7 7 7 6 . . 6 6 6 . . . 6 7 7 7 7 6 . . 
. . . . . . . . 6 7 7 7 7 6 . . 6 6 6 . . 6 7 7 7 7 6 . . . 
. . . . . . . 6 7 7 7 7 6 . . . 6 6 . . . 6 7 7 7 7 6 . . . 
. . . . . . 6 7 7 7 7 7 6 . . 6 6 6 . . . 6 7 7 7 6 . . . . 
. . . . . 6 7 7 7 7 6 6 . . 6 6 6 6 . . . 6 7 7 7 6 . . . . 
. . . . 6 7 7 7 7 7 6 . . . 6 6 6 6 . . 6 7 7 7 6 6 . . . . 
. . . . 6 7 7 7 7 6 6 . . 6 6 6 6 . . . 6 7 7 7 6 . . . . . 
. . . 6 7 7 7 7 6 6 . . . 6 6 6 6 . . . 6 7 7 6 . . . . . . 
. . . 6 7 7 7 7 6 . . . . 6 6 6 . . . . . 6 7 7 6 . . . . . 
. . . 6 7 7 7 6 6 . . . . 6 6 6 . . . . . 6 7 7 6 . . . . . 
. . 6 7 7 7 7 6 . . . . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . 6 7 7 7 7 6 . . . . . 6 6 6 . . . . . 6 7 7 7 6 . . . . 
. . 6 7 7 7 6 6 . . . . . 6 6 6 . . . . . . 6 7 7 6 . . . . 
. . 6 7 7 7 6 . . . . . . 6 6 6 . . . . . . 6 7 7 7 6 . . . 
. . 6 7 7 7 6 . . . . . . . 6 6 . . . . . . 6 7 7 7 6 . . . 
. . . 6 7 7 6 . . . . . . . 6 6 . . . . . . 6 7 7 7 6 . . . 
. . . 6 7 6 . . . . . . . . . 6 6 . . . . . 6 7 7 7 6 . . . 
. . . 6 7 6 . . . . . . . . . 6 6 6 . . . . 6 7 7 7 6 . . . 
. . . . 6 6 . . . . . . . . . . . . . . . 6 7 7 7 6 . . . . 
. . . . 6 . . . . . . . . . . . . . . . 6 7 7 7 6 . . . . . 
. . . . 6 . . . . . . . . . . . . . . . 6 6 6 6 . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`],
    1000,
    true
    )
    lifeBoss = 10
    boss.setPosition(screenCenter.x + 95, 60)
    bossHeart.setPosition(screenCenter.x + 95, 41)
    boss.setVelocity(-20, 0)
    bossHeart.setVelocity(-20, 0)
}
function createBonus () {
    if (Math.percentChance(5)) {
        lifeUp = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . 7 7 7 7 7 7 7 . . . . . . 
. . 7 7 5 5 5 5 5 7 7 . . . . . 
. 7 7 5 5 5 6 6 6 5 7 7 . . . . 
7 7 5 5 5 5 6 6 6 6 5 7 7 . . . 
7 5 5 5 5 5 6 6 6 6 6 5 7 . . . 
7 5 5 5 5 5 6 6 6 6 6 5 7 . . . 
7 5 6 6 6 6 6 6 6 6 6 5 7 . . . 
7 5 6 6 6 6 6 5 5 5 5 5 7 . . . 
7 5 6 6 6 6 6 5 5 5 5 5 7 . . . 
7 7 5 6 6 6 6 5 5 5 5 7 7 . . . 
. 7 7 5 6 6 6 5 5 5 7 7 . . . . 
. . 7 7 5 5 5 5 5 7 7 . . . . . 
. . . 7 7 7 7 7 7 7 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.LifeUp)
        lifeUp.setPosition(screenCenter.x + scene.screenWidth(), Math.randomRange(1, 10) * 10)
    }
    if (Math.percentChance(5)) {
        shootQuick = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . b b b b b b b . . . . . . 
. . b b 5 5 5 5 5 b b . . . . . 
. b b 5 5 5 a a a 5 b b . . . . 
b b 5 5 5 5 a a a a 5 b b . . . 
b 5 5 5 5 5 a a a a a 5 b . . . 
b 5 5 5 5 5 a a a a a 5 b . . . 
b 5 a a a a a a a a a 5 b . . . 
b 5 a a a a a 5 5 5 5 5 b . . . 
b 5 a a a a a 5 5 5 5 5 b . . . 
b b 5 a a a a 5 5 5 5 b b . . . 
. b b 5 a a a 5 5 5 b b . . . . 
. . b b 5 5 5 5 5 b b . . . . . 
. . . b b b b b b b . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.bulletType1)
        shootQuick.setPosition(screenCenter.x + scene.screenWidth(), Math.randomRange(1, 10) * 10)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Tourelle, function (sprite, otherSprite) {
    game.over(false)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.bulletType1, function (sprite, otherSprite) {
    otherSprite.destroy()
    bulletKind = 1
    pause(7000)
    bulletKind = 0
})
controller.B.onEvent(ControllerButtonEvent.Pressed, function () {
    music.pewPew.play()
    bomb = sprites.createProjectileFromSprite(img`
. 4 4 4 . 
4 5 5 5 4 
4 5 5 5 4 
. 4 4 4 . 
`, ship, screenCenter.vx + 100, 20)
    bomb.ax = -50
    bomb.ay = 300
    bomb.setKind(SpriteKind.myShoot)
    pause(500)
})
sprites.onOverlap(SpriteKind.myShoot, SpriteKind.Asteroid, function (sprite, otherSprite) {
    otherSprite.destroy(effects.ashes, 100)
    sprite.destroy()
    info.changeScoreBy(2)
})
function intitializeLevel () {
    bossCalled = false
    tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7],
            TileScale.Sixteen
        ))
    screenCenter.setPosition(80, 60)
    speed += -500
    coolDown += -100
    info.changeLifeBy(1)
    for (let index = 0; index <= 9; index++) {
        tiles.setTileAt(tiles.getTileLocation(index, 0), myTiles.tile4)
        tiles.setTileAt(tiles.getTileLocation(index, 7), myTiles.tile5)
    }
}
scene.onHitWall(SpriteKind.Player, function (sprite) {
    game.over(false)
})
sprites.onOverlap(SpriteKind.myShoot, SpriteKind.Tourelle, function (sprite, otherSprite) {
    otherSprite.destroy(effects.ashes, 100)
    sprite.destroy()
    info.changeScoreBy(20)
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    music.pewPew.play()
    if (bulletKind == 0) {
        shoot = sprites.createProjectileFromSprite(img`
. . . . . 5 5 5 5 5 . 
. . 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 
. . 5 5 5 5 5 5 5 5 5 
. . . . . 5 5 5 5 5 . 
`, ship, 150, 0)
        shoot.setKind(SpriteKind.myShoot)
        pause(coolDown)
    } else {
        if (bulletKind == 1) {
            shoot = sprites.createProjectileFromSprite(img`
. 5 . 
5 7 5 
. 5 . 
`, ship, 200, 0)
            shoot.setKind(SpriteKind.myShoot)
            shoot = sprites.createProjectileFromSprite(img`
. 5 . 
5 7 5 
. 5 . 
`, ship, 200, -100)
            shoot.setKind(SpriteKind.myShoot)
            shoot = sprites.createProjectileFromSprite(img`
. 5 . 
5 7 5 
. 5 . 
`, ship, 200, 100)
            shoot.setKind(SpriteKind.myShoot)
            pause(coolDown)
        } else {
            if (bulletKind == 2) {
            	
            }
        }
    }
})
function createEnemies () {
    if (Math.percentChance(80)) {
        meteor = sprites.create(img`
. . . . . e e . . . . 
. . . . e c e e e . . 
. . . e c c c e e . . 
. . e c c c c e e e . 
. d d e c e e c e e . 
. d d d d e c c c e . 
. d d d d e c c c e . 
. d d e d d d d e e . 
. d d d d d d d d e . 
. . d d d d d d d . . 
. . . d d d d . . . . 
. . . . . . . . . . . 
. . . . . . . . . . . 
`, SpriteKind.Asteroid)
        hMeteor = Math.randomRange(1, 10)
        meteor.setPosition(screenCenter.x + scene.screenWidth() / 2, hMeteor * 10)
        meteor.vx = -50
    }
    if (Math.percentChance(50)) {
        nastyShip = sprites.create(img`
. . 6 6 6 6 6 . . . . . . 
. 8 8 8 6 6 6 6 . 5 . . . 
8 8 8 8 8 6 6 6 5 5 4 . . 
8 8 8 c 7 6 6 6 8 8 5 4 4 
c c c c 7 7 6 6 8 8 5 4 . 
c c 7 7 7 7 7 6 5 5 4 . . 
. c 7 7 7 7 7 . . . . . . 
. . . . . . . . . . . . . 
`, SpriteKind.badShip)
        hNastyShip = Math.randomRange(1, 10)
        while (hNastyShip == hMeteor) {
            hNastyShip = Math.randomRange(1, 10)
        }
        nastyShip.setPosition(screenCenter.x + scene.screenWidth() / 2, hNastyShip * 10)
        nastyShip.follow(ship, 50)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Asteroid, function (sprite, otherSprite) {
    otherSprite.destroy(effects.ashes, 100)
    info.changeLifeBy(-2)
})
sprites.onOverlap(SpriteKind.myShoot, SpriteKind.Boss, function (sprite, otherSprite) {
    sprite.destroy()
    boss.startEffect(effects.fire, 100)
    lifeBoss += -1
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.badShip, function (sprite, otherSprite) {
    otherSprite.destroy()
    info.changeLifeBy(-2)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.LifeUp, function (sprite, otherSprite) {
    otherSprite.destroy()
    info.changeLifeBy(1)
})
function destroyEnemies () {
    for (let value3 of sprites.allOfKind(SpriteKind.Asteroid)) {
        if (value3.x < screenCenter.x - scene.screenWidth() / 2) {
            value3.destroy()
        }
    }
    for (let value4 of sprites.allOfKind(SpriteKind.Tourelle)) {
        if (value4.x < screenCenter.x - scene.screenWidth() / 2) {
            value4.destroy()
        }
    }
}
scene.onHitWall(SpriteKind.Asteroid, function (sprite) {
    sprite.destroy(effects.ashes, 100)
})
sprites.onOverlap(SpriteKind.myShoot, SpriteKind.badShip, function (sprite, otherSprite) {
    otherSprite.destroy(effects.ashes, 100)
    sprite.destroy()
    info.changeScoreBy(10)
})
let timeAnimation = 0
let built = false
let hNastyShip = 0
let nastyShip: Sprite = null
let hMeteor = 0
let meteor: Sprite = null
let shoot: Sprite = null
let bomb: Sprite = null
let shootQuick: Sprite = null
let lifeUp: Sprite = null
let lifeBoss = 0
let boss: Sprite = null
let bossHeart: Sprite = null
let bossCalled = false
let hypotenuse = 0
let yVel = 0
let xVel = 0
let projectile: Sprite = null
let row = 0
let hTourelle = 0
let tourelle: Sprite = null
let screenCenter: Sprite = null
let ship: Sprite = null
let coolDown = 0
let bulletKind = 0
scene.setBackgroundImage(img`
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c d c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c e c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 d c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 8 d c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c e c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c d c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c e c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c d c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c e d c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 c 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c e c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 c 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 c c c c c e c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 c c c c c c 1 1 1 1 c c c c c c c c c 1 c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 c c 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 c c c c c c 1 c c c c c c c c c c c c 1 c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c 1 c 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 c 1 1 c 1 1 1 1 1 c c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 c 1 1 c 1 1 1 1 1 c c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 c c c 1 1 1 c c c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c e c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 c c c 1 1 c c c c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c e c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 c c c 1 1 c c c c 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c c 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c d e c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 c 1 1 1 1 1 1 1 1 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 c 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c e c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 c c c c c c c c 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
`)
info.setLife(5)
let speed = 3000
bulletKind = 0
coolDown = 500
let timeCreation = game.runtime()
ship = sprites.create(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . 5 5 5 5 4 b b b . . . 
. . a a b 1 1 2 8 8 8 8 5 a 8 8 b . . 
a a b 8 8 e e 2 5 5 5 8 3 a a b b 4 2 
. a a b 8 d d 2 2 2 2 2 2 2 2 2 2 2 2 
. . a a b 1 1 3 3 4 2 2 2 2 2 2 2 2 . 
. . . . 2 2 2 2 2 2 2 3 3 2 2 2 . . . 
. . 2 2 2 2 2 2 2 2 3 3 2 . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`, SpriteKind.Player)
animation.runImageAnimation(
ship,
[img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . 5 5 5 5 4 b b b . . . 
. . a a b 1 1 2 8 8 8 8 5 a 8 8 b . . 
a a b 8 8 e e 2 5 5 5 8 3 a a b b 4 2 
. a a b 8 d d 2 2 2 2 2 2 2 2 2 2 2 2 
. . a a b 1 1 3 3 4 2 2 2 2 2 2 2 2 . 
. . . . 2 2 2 2 2 2 2 3 3 2 2 2 . . . 
. . 2 2 2 2 2 2 2 2 3 3 2 . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . 5 5 5 5 4 b b b . . . 
. . a a b 1 1 2 8 8 8 8 5 a 8 8 b . . 
. a b b 8 e e 2 5 5 5 8 3 a a b b 4 2 
a a b 8 8 d d 2 2 2 2 2 2 2 2 2 2 2 2 
. . a a b 1 1 3 3 4 2 2 2 2 2 2 2 2 . 
. . . . 2 2 2 2 2 2 2 3 3 2 2 2 . . . 
. . 2 2 2 2 2 2 2 2 3 3 2 . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`],
200,
true
)
screenCenter = sprites.create(img`
. 
`, SpriteKind.Screen)
screenCenter.setFlag(SpriteFlag.Ghost, true)
scene.cameraFollowSprite(screenCenter)
screenCenter.setVelocity(15, 0)
intitializeLevel()
ship.setPosition(40, 60)
ship.vx = 15
controller.moveSprite(ship, 80, 80)
game.onUpdate(function () {
    if (bossCalled) {
        if (boss.x == screenCenter.x + 65) {
            boss.vx = 0
            bossHeart.vx = 0
        }
    }
})
game.onUpdate(function () {
    if (screenCenter.x % 16 == 0) {
        if (!(built)) {
            createLevel(screenCenter.x / 16 + 5)
            built = true
        }
    } else {
        built = false
    }
    if (ship.x < screenCenter.x - scene.screenWidth() / 2 + 10) {
        ship.x = screenCenter.x - scene.screenWidth() / 2 + 10
    }
    if (ship.y <= 5 || ship.y >= 115) {
        game.over(false)
    }
    if (screenCenter.x + 80 >= 1020) {
        if (!(bossCalled)) {
            callBoss2()
        }
    }
    if (game.runtime() - timeCreation >= speed) {
        if (screenCenter.x + 80 < 1020 - scene.screenWidth()) {
            createEnemies()
            createBonus()
            timeCreation = game.runtime()
        }
    }
    if (game.runtime() - timeAnimation >= Math.round(speed + 2)) {
        animateEnemies()
        timeAnimation = game.runtime()
    }
    destroyEnemies()
    if (bossCalled && lifeBoss == 0) {
        bossHeart.destroy()
        boss.destroy(effects.spray, 500)
        info.changeScoreBy(100)
        music.powerUp.play()
        screenCenter.vx = 15
        ship.x = ship.x - 860
        intitializeLevel()
    }
})
game.onUpdateInterval(500, function () {
    if (bossCalled) {
        projectile = sprites.createProjectileFromSprite(img`
. 7 7 7 7 . . . . . 
7 7 7 7 7 7 7 7 . . 
7 6 6 7 7 7 7 7 7 . 
7 6 6 6 6 7 7 7 7 7 
7 6 6 7 7 7 7 7 7 . 
7 7 7 7 7 7 7 7 . . 
. 7 7 7 7 . . . . . 
`, bossHeart, -150, Math.randomRange(-5, 5) * 10)
        projectile.setKind(SpriteKind.badShoot)
    }
})
